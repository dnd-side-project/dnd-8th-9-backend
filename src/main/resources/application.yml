server:
  port: 80
  address: 172.31.23.107
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

cloud:
  aws:
    credentials:
      accessKey: ${aws.credentials.accessKey}
      secretKey: ${aws.credentials.secretKey}
    s3:
      bucket: ${s3.bucket}
    region:
      static: "ap-northeast-2"
    stack:
      auto: false



spring:
  mvc:
    view:
      prefix: /templates/
      suffix: .mustache
  h2:
    console:
      enabled: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-authentication-method: POST
        provider :
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    hibernate: # hibernate 사용 설정
      # 애플리케이션 실행 시점에 테이블을 다 지우고, 내가 가진 entity 정보를 보고 다시 테이블 자동 생성
      # if exists drop table 해주고 다시 만들어준다고 보면 된다.
      ddl-auto: validate
#    properties: # property 사용 설정
#      hibernate: # hibernate property 설정
#        format_sql: true
#
## 로그 레벨 설정
#logging:
#  level:
#    # hibernate 가 남기는 모든 로그가 debug모드로 설정
#    # jpa hibernate가 생성하는 sql이 로거를 통해서 찍히도록 하는 설정
#    org.hibernate.SQL: debug
#    org.hibernate.type: trace # 실제 들어가는 파라미터값 찍어주는 설정
#    org.springframework.web.client.RestTemplate: DEBUG

app:
  cors:
    allowedOrigins: ${cors.allowedOrigins}
  auth:
    tokenSecret: ${auth.tokenSecret}
    tokenExpiry: 604800000
    refreshTokenExpiry: 604800000
  # jwt secret key 설정
jwt.secret: ${jwt.secret}