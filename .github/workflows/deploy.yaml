name: CI-CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  S3_BUCKET_NAME: dangdo
  RESOURCE_PATH: ./src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: dangdo-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: dangdo-server
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
        
      - name: Set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          cloud.aws.credentials.accessKey: ${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESSKEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.CLOUD_AWS_CREDENTIALS_SECRETKEY }}
          cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET }}
          spring.datasource.url: ${{ secrets.SPRING_DATASOURCE_URL }} 
          spring.datasource.username: ${{ secrets.SPRING_DATASOURCE_USERNAME }} 
          spring.datasource.password: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.KAKAO_CLIENT_ID }} 
          spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }} 
          spring.security.oauth2.client.registration.google.redirect-uri: ${{ secrets.KAKAO_REDIRECT_URI }} 
          app.cors.allowedOrigins: ${{ secrets.APP_CORS_ALLOWEDORIGINS }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: | 
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
